# def a_function():
#     print("You just created a function!")
# a_function()

# def empty_function():
#     pass

############################################################

# функция суммы чисел в списке до 10
# def a():
#     sum = 0
#     for i in range(10):
#         sum += 1
#     print(sum)
# a()

###################################################
# ПЕРЕДАЧА АРГУМЕНТОВ В ФУНКЦИИ

# def ad(a,b):
#     return a + b   # не выводит на экран, считает внутри компьютера
# print(ad(1,2))
#
# def ad(a,b):
#     print (a+b)   # если 2 принта то выведет только первый принт
# print(ad(1,2))
# #
# def ad(a,b):
#      return a + b
# print(ad(a=2, b=3))
#
# total = ad (b=4, a=5)
# print(total)

##################################################################
#ПУСТАЯ ФУНКЦИЯ
# def empty_function():    #пустая функция, обязательно с указанием PASS
#      pass

################################################################

# def keyword_function(a=1, b=2):
#      return a*b
# print(keyword_function(b=10, a=5))
# print(keyword_function())

#############################################################
   # функция с определенными и неопредленными аргументами
# def mixed_function(a, b=2, c=3):
#      return a+b+c
# #mixed_function(b=4,c=5)
# print(mixed_function(1,b=4,c=5))
# print(mixed_function(2))   # так как заданы изначально аргументы, то достаточно только ввести аргумеент "а"

#####################################################################################################

# *args(обычный аргумент, преобраз в кортежи) **kwargs(множественный аргумент, преобраз в словари)
#
# def many(*args, **kwargs):
#      print(args, kwargs)
#      print(kwargs)
# many(1,2,3, name='Mike', job='programmer')

######################################################################################

# def funct_a():
#      global a   #глобал используется во всей программе
#      a = 1
#      b = 2
#      return a+b
# def funct_b():
#      c = 3
#      return a + c
# print(funct_a())
# print(funct_b())

###################################################################

#вложенные функции
#
# def fun_1 (a, b):
#      def inner_func(x):
#           return x*x*x  #4*4*4 и 5*5*5
#      return inner_func(a)+inner_func(b)  #64+125
# print(fun_1(4,5))

##############################################################
# запись в ОДНУ строку, просто для красоты так
# def summma(a,b): return a+b
# print(summma(1,5))




